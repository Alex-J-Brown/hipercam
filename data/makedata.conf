# Example configuration file for 'makedata' script. Although all parameters
# are read in by configparser as strings, they will be translated to different
# types in general; the types are indicated in square brackets.

# overwrite = controls whether existing files with the same name as the
# output generated by this routine are will
[general]
overwrite = true

#--------------------------------------------
# Start of CCD / Window format definition
#--------------------------------------------

# Section title must specify an integer label for the CCD
# nxtot = maximum X-dimension, unbinned pixels [int]
# nytot = maximum Y-dimension, unbinned pixels [int]
[ccd 1]
nxtot = 2048
nytot = 1024

# The section titles for the windows must specify the CCD they attach
# to and an integer label for the window. It is an error for the related
# CCD not to have been defined.
#
# Each window should specify:
#
# llx = X position of lower-left unbinned pixel (origin = (1,1)) [int]
# lly = Y position of lower-left unbinned pixel (origin = (1,1)) [int]
# nx = X dimension of window, binned pixels [int]
# ny = Y dimension of window, binned pixels [int]
# xbin = X binning factor [int]
# ybin = Y binning factor [int]
# read = Readout noise, RMS ADU [float]
# gain = CCD gain, electrons per ADU [float]
[window 1 1]
llx = 11
lly = 21
nx = 100
ny = 200
xbin = 2
ybin = 1
read = 2.8
gain = 1.1

# This window will be created with label = 3
[window 1 3]
llx = 101
lly = 321
nx = 100
ny = 100
xbin = 2
ybin = 1
read = 3.2
gain = 1.2

# Another CCD
[ccd 4]
nxtot = 2048
nytot = 1024

# with some other windows
[window 4 2]
llx = 1
lly = 21
nx = 150
ny = 200
xbin = 2
ybin = 2
read = 3.5
gain = 1.15

[window 4 3]
llx = 401
lly = 621
nx = 100
ny = 100
xbin = 2
ybin = 1
read = 2.7
gain = 1.05

#--------------------------------------------
# End of CCD / Window format definition
#--------------------------------------------

# Flat field section (optional, comment out the [flat] part if
# you don't want this at all)
#
# Generates, applies & saves a flat field
#
# rms = RMS scatter in pixel values relative to 1.0 [float]
# nspeck = number of dust specks to spread over each CCD [int]
# radius = radius (RMS of gaussian, unbinned pixels) of each speck [float]
# depth = depth of each dust dip at its centre [float]
# flat = name of file to save the flat to [string]
[flat]
rms = 0.02
nspeck = 100
radius = 1.0
depth = 0.3
flat = flat

# Bias section (optional, comment out the [bias] part if
# you don't want this at all)
#
# Generates, applies & saves a bias frame
#
# mean = mean level [float
# rms = RMS scatter in pixel values relative to the mean [float]
# bias = name of file to save the bias to [string]
[bias]
mean = 1250.
rms = 2.
bias = bias

# Now sections defining target fields. See hipercam.Target
# and hipercam.Field to understand the parameters fully. 
# There can be any number of these, starting with 'field',
# and ending with something to make them unique. '1', '2',
# '3' etc are an obvious choice.
#
# ntarg = number of targets to add [int]
# height1 = lowest peak height [float]
# height2 = highest peak height [float]
# angle1 = lowest angle of axis 1 of ellipse [float]
# angle2 = highest angle of axis 1 of ellipse [float]
# fwhm1 = FWHM along axis 1
# fwhm2 = FWHM along axis 2
# beta = exponent in Moffat profile.
# ndiv = sub-division factor for adding in targets (see Windat.add_fxy)

[field 1]
ntarg = 100
height1 = 0.1
height2 = 100.
angle1 = 30.
angle2 = 60.
fwhm1 = 4.
fwhm2 = 3.
beta = 4.
ndiv = 2

[field 2]
ntarg = 500
height1 = 100.
height2 = 10000.
angle1 = 30.
angle2 = 60.
fwhm1 = 3.
fwhm2 = 3.
beta = 4.
ndiv = 2

# Section defining the files which are written as a root name plus an
# integer index number.
#
# root = root of file name [string]
# nfiles = number of files (if == 0, then no integer extension will be used) [int]
# ndigit = number of digits, e.g. 'fake012.hcm' [int]
[files]
root = fake
nfiles = 5
ndigit = 3
